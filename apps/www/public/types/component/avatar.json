{
  "Root": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "unstyled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to remove the component's style."
      }
    }
  },
  "Fallback": {
    "props": {
      "name": {
        "type": "string | undefined",
        "isRequired": false,
        "description": "The name to derive the initials from.\nIf not provided, the fallback will display a generic icon."
      }
    }
  },
  "Group": {
    "props": {
      "align": {
        "type": "JsxStyleProps[\"alignItems\"] | undefined",
        "isRequired": false,
        "description": "The `alignItems` style property"
      },
      "justify": {
        "type": "JsxStyleProps[\"justifyContent\"] | undefined",
        "isRequired": false,
        "description": "The `justifyContent` style property"
      },
      "wrap": {
        "type": "JsxStyleProps[\"flexWrap\"] | undefined",
        "isRequired": false,
        "description": "The `flexWrap` style property"
      },
      "skip": {
        "type": "(child",
        "isRequired": false,
        "description": "A function that determines if a child should be skipped"
      },
      "orientation": {
        "isRequired": false
      },
      "attached": {
        "isRequired": false
      },
      "grow": {
        "isRequired": false
      },
      "stacking": {
        "isRequired": false
      }
    }
  }
}